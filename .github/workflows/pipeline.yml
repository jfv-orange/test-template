name: main

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  imagetag: ${{ github.head_ref || github.ref_name || 'dev' || 'main'}}
  branch: ${{ github.head_ref || github.ref_name || 'dev' || 'main'}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: dump values
        run: |
          echo "ghcr.io/abcdesktopio/mongo:${{ env.imagetag }}"
          echo "branch:${{ env.branch }}"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: .
          file: Dockerfile
          push: false
          build-args: |
            branch:${{ env.branch }}
          tags: |
            ghcr.io/jfv-orange/test-template:safe${{ env.imagetag }}




      # - uses: actions/checkout@v4
      # - name: Run Hadolint
      #   uses: hadolint/hadolint-action@v3
      #   with:
      #     dockerfile: ./Dockerfile
      #     format: sarif
      #     output-file: hadolint.sarif
      #     no-fail: true
      # - name: Generate Hadolint badge
      #   uses: jfv-orange/template/hadolint-badge@v1
      #   with:
      #     result-file: hadolint.sarif
      - name: Run Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: "docker.io/my-org/my-app:${{ github.sha }}"
          format: json
          output: trivy.json
          severity: CRITICAL,HIGH
      - name: Generate Trivy badge
        uses: jfv-orange/template/trivy-badge@v1
        with:
          result-file: trivy.json

      - uses: jfv-orange/template/publish-pages@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}